{
  "$schema": "dpe/json/schema/library",
  "$libraries": {
    "predicate": "predicate-library.json",
    "item_modifier": "item_modifier-library.json",
    "number_provider": "utils/number_provider-library.json"
  },
  "$templates": {},
  "$definitions": {
    "loot_table": {
      "$type": "object",
      "properties": {
        "type": {
          "description": "Optional, specifies the context in which the loot table should be invoked. All item functions, predicates and number providers are then validated to ensure the parameters of the context type specified here will cover all requirements, and prints a warning message in the output log if any function or condition requires a context parameter that is not covered. Valid loot context types are described [[#Loot_context_types|below]].",
          "optional": true,
          "value": { 
            "$type": "enum",
            "options": {
              "empty": "* Only used by the hardcoded empty loot table. Supplies no loot context parameters. \n* Specifying {{cd|\"type\":\"empty\"}} means no context parameters can be used in this loot table.",
              "chest": "* Opening of a container with loot table (can be {{#var:containers}}).\n* The command {{cmd|loot &hellip; loot &lt;loot_table&gt;}}.",
              "command": "* Not used for loot tables. Specifying {{cd|\"type\":\"command\"}} doesn't make sense.\n* Used internally by commands such as {{cmd|item modify}} or {{cmd|execute (if{{!}}unless) predicate}}.",
              "selector": "* Not used for loot tables. Specifying {{cd|\"type\":\"selector\"}} doesn't make sense.\n* Used internally by the {{cd|predicate}} [[Target selectors|target selector]] argument.",
              "fishing": "* [[Fishing]].\n* The command {{cmd|loot &hellip; fish &lt;loot_table&gt;}}.",
              "entity": "* Loot from a living entity's death.\n* The command {{cmd|loot &hellip; kill &lt;target&gt;}}.",
              "archaeology": "* Using a [[brush]] on [[suspicious sand]] that has a loot table.",
              "gift": "* Gift from a cat or villager.",
              "barter": "* [[Bartering]] with piglins.",
              "advancement_reward": "* Loot table set as an [[Advancement/JSON_format|advancement's reward]].",
              "generic": "* Not used. Supplies all loot context parameters.\n* Specifying {{cd|\"type\":\"generic\"}} or omitting it means no checking for context parameters in this loot table when loading the data pack.",
              "block": "* Loots from breaking a block.\n* The command {{cmd|loot &hellip; mine &lt;pos&gt;}}."
            },
            "optionalPrefixes": ["minecraft:"]
          }
        },
        
        "functions": {
          "value": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
          "optional": true,
          "description": "Invokes [[Loot table#Item function|item functions]], in order, upon all item stacks generated by this table."
        },
        
        "pools": {
          "value": { "$type": "array", "element": { "$defRef": "%pool"} },
          "optional": true,
          "description": "A list of all pools for this loot table. Each pool used generates items from its list of items based on the number of rolls. Pools are applied in order."
        },
        
        "random_sequence": {
          "value": { "$type": "string", "type": "minecraft:resource_location"}, 
          "optional": true,
          "description": "A resource location specifying the name of the random sequence that will be used to generate loot from this loot table. If only one loot table uses a specific random sequence, the order of the randomized sets of items generated is the same for every world using the same world seed. If multiple loot tables use the same random sequence, the loot generated from any one of them changes depending on how many times and in what order any of the other loot tables were invoked."
        }
      }
    },
    
    "%pool": {
      "$type": "object",
      "properties": {
        "conditions": {
          "value": { "$type": "array", "element": { "$defRef": "predicate:predicate-body"} },
          "optional": true,
          "description": "A list of [[#Predicate|predicates]] that must all pass for this pool to be used."
        },
        
        "functions": {
          "value": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
          "optional": true,
          "description": "Invokes [[Loot table#Item function|item functions]], in order, upon all item stacks generated by this table."
        },
        
        "rolls": {
          "value": { "$defRef": "number_provider:number_provider"},
          "optional": false,
          "description": "A [[#Number Providers|Number Provider]]. Specifies the number of rolls on the pool."
        },
        
        "bonus_rolls": {
          "value": { "$defRef": "number_provider:number_provider"},
          "optional": true,
          "default": 0.0,
          "description": "A [[#Number Providers|Number Provider]]. Specifies the number of bonus rolls on the pool per point of [[Attributes#Attributes_for_players|luck]]. Rounded down after multiplying. Defaults to exactly 0.0."
        },
        
        "entries": {
          "value": { "$type": "array", "element": { "$defRef": "entry_provider"} },
          "optional": false,
          "description": "A list of all things that provide loot entries for this pool. One loot entry is chosen per roll as a weighted random selection from all loot entries added into the pool. Note that it is '''not''' selected weightedly from the elements of this list, instead, the weighted selection is to select from all loot entries provided by these elements (entry providers), which are different because an element (entry provider) can provide empty, or one or more weighted loot entries."
        }
      }
    },
    
    "entry_provider": {
      "$type": "object",
      "properties": {
        "conditions": {
          "value": { "$type": "array", "element": { "$defRef": "predicate:predicate-body"} },
          "optional": true,
          "description": "A list of [[#Predicate|predicates]] that must all pass for the provided loot entry/ies to be added into the loot pool."
        },
        
        "type": {
          "description": "Resource location of the type of entry provider. Set to one of the following values.",
          "optional": true,
          "value": { 
            "$type": "enum",
            "options": {
              "item": "Provides a loot entry that drops a single item stack.",
              "tag": "Provides a loot entry that generates all item in an item tag, or multiple loot entries (each entry generates a single item in the item tag).",
              "loot_table": "Provides another loot table as a loot entry.",
              "dynamic": "Provides a loot entry that generates block-specific drops.",
              "empty": "Provides a loot entry that generates nothing into the loot pool.",
              "group": "All entry providers in the children list is applied into the loot pool. Can be used for convenience, e.g. if one condition applies for multiple entries.",
              "alternatives": "Only the first successful (conditions are met) entry provider, in order, is applied to the loot pool.",
              "sequence": "The child entry providers are applied to the loot pool in sequential order, continuing until an entry provider's conditions are not met, then applying no more entry providers from the children."
            },
            "optionalPrefixes": ["minecraft:"]
          }
        },
        
        "functions": {
          "values": {
            "item": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
            "tag": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
            "loot_table": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
            "dynamic": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
            "empty": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
            "minecraft:item": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
            "minecraft:tag": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
            "minecraft:loot_table": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
            "minecraft:dynamic": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} },
            "minecraft:empty": { "$type": "array", "element": { "$defRef": "item_modifier:item_modifier-body"} }
          },
          "decidingProp": "type",
          "optional": true,
          "description": "Invokes [[Loot table#Item function|item functions]], in order, upon all item stacks generated by this table."
        },
        
        "weight": {
          "values": {
            "item": { "$type": "float" },
            "tag": { "$type": "float" },
            "loot_table": { "$type": "float" },
            "dynamic": { "$type": "float" },
            "empty": { "$type": "float" },
            "minecraft:item": { "$type": "float" },
            "minecraft:tag": { "$type": "float" },
            "minecraft:loot_table": { "$type": "float" },
            "minecraft:dynamic": { "$type": "float" },
            "minecraft:empty": { "$type": "float" }
          },
          "decidingProp": "type",
          "optional": true,
          "description": "Determines how often the loot entry is chosen out of all the entries in the pool. Entries with higher weights are used more often. The chance of an entry being chosen is [this entry's weight รท total of all considered entries' weights]."
        },
        
        "quality": {
          "values": {
            "item": { "$type": "float" },
            "tag": { "$type": "float" },
            "loot_table": { "$type": "float" },
            "dynamic": { "$type": "float" },
            "empty": { "$type": "float" },
            "minecraft:item": { "$type": "float" },
            "minecraft:tag": { "$type": "float" },
            "minecraft:loot_table": { "$type": "float" },
            "minecraft:dynamic": { "$type": "float" },
            "minecraft:empty": { "$type": "float" }
          },
          "decidingProp": "type",
          "optional": true,
          "description": "Modifies the loot entry's {{cd|weight}} based on the luck attribute of the {{cd|killer_entity}} for [[#Loot context type|loot context type]] {{cd|entity}} or the {{cd|this}} entity for all other loot table types. Formula is {{cd|floor(weight + (quality &times; generic.luck))}}."
        },
        
        "name": {
          "values": {
            "item": { "$type": "string", "type": "minecraft:resource_location", "args": { "schema": "item" } },
            "tag": { "$type": "string", "type": "minecraft:resource_location", "args": { "schema": "item", "onlyTags": true } },
            "loot_table": { "$type": "string", "type": "minecraft:resource_location", "args": { "schema": "loot_table" } },
            "dynamic": { "$type": "enum", "options": { "contents": "to drop block entity contents.", "minecraft:contents": "to drop block entity contents." } },
            
            "minecraft:item": { "$type": "string", "type": "minecraft:resource_location", "args": { "schema": "item" } },
            "minecraft:tag": { "$type": "string", "type": "minecraft:resource_location", "args": { "schema": "item", "onlyTags": true } },
            "minecraft:loot_table": { "$type": "string", "type": "minecraft:resource_location", "args": { "schema": "loot_table" } },
            "minecraft:dynamic": { "$type": "enum", "options": { "contents": "to drop block entity contents.", "minecraft:contents": "to drop block entity contents." } }
          },
          "decidingProp": "type",
          "optional": false,
          "description": "The [[resource location]] of the item to be generated, e.g. {{cd|minecraft:diamond}}. The default, if not changed by item functions, is a stack of 1 of the default instance of the item."
        },
        
        "expand": {
          "values": {
            "tag": { "$type": "boolean" },
            "minecraft:tag": { "$type": "boolean" }
          },
          "decidingProp": "type",
          "optional": false,
          "description": "If set to {{cd|true}}, provides one loot entry per item in the tag with the same weight and quality, and each entry generates one item. If {{cd|false}}, provides a single loot entry that generates all items (each with count of 1) in the tag."
        },
        
        "children": {
          "values": {
            "group": { "$type": "array", "element": { "$defRef": "entry_provider"} },
            "alternatives": { "$type": "array", "element": { "$defRef": "entry_provider"} },
            "sequence": { "$type": "array", "element": { "$defRef": "entry_provider"} },
            "minecraft:group": { "$type": "array", "element": { "$defRef": "entry_provider"} },
            "minecraft:alternatives": { "$type": "array", "element": { "$defRef": "entry_provider"} },
            "minecraft:sequence": { "$type": "array", "element": { "$defRef": "entry_provider"} }
          },
          "decidingProp": "type",
          "optional": false,
          "description": "The list of entry providers."
        }
      }
    }
  }
}